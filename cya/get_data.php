<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><?phpdefine('DB_PREFIX', '');define('SUPPLIER_PATH', realpath(dirname(dirname(__FILE__)) . '/image/supplier/'));require_once 'database.php';require_once 'convert_title.php';require_once '../configServer.php';require_once 'curl.php';set_time_limit(9999999999);error_reporting(E_ERROR);class Xpath {    private $language = array(1, 2);    private $categoyId = 17;    public function loadXpath($url) {        $dom = new DOMDocument('1.0', 'utf-8');        $dom->loadHTMLFile(trim($url));        $xpath = new DOMXPath($dom);        return $xpath;    }    public function addProduct($data) {        $database = new dataBase();        $database->connect();        //check model        $product = $database->fetchRow("select * from " . DB_PREFIX . "product where model = '" . $data['sku'] . "'");        if (!$product) {            $sqlInsertProduct = "INSERT INTO " . DB_PREFIX . "product SET                 model = '" . $data['sku'] . "',                 sku = '" . $data['sku'] . "',                 upc = '',                 supplier_id = '" . $data['supplier_id'] . "',                image_link = '" . $data['images'][0] . "',                 location = '',                 quantity = '100',                 minimum = '',                 subtract = '',                 stock_status_id = 7,                 date_available = '',                 manufacturer_id = '',                 shipping = '',                 price = '" . (float) $data['price'] . "',                 points = '',                 weight = '',                 weight_class_id = '',                 length = '',                 width = '',                 height = '',                 length_class_id = '',                 status = 1,                 tax_class_id = '',                 sort_order = '" . (int) $key . "',                 date_added = NOW()";            $database->query($sqlInsertProduct);            $productId = $database->lastInsertId();            foreach ($this->language as $language_id) {                $database->query("INSERT INTO " . DB_PREFIX . "product_description SET                product_id = '" . (int) $productId . "',                 language_id = '" . (int) $language_id . "',                 name = '" . ($data['name']) . "',                 meta_keyword = '',                 meta_description = '" . ($data['description']) . "',                 description = '" . ($data['description']) . "'");            }            $database->query("INSERT INTO " . DB_PREFIX . "product_to_store SET             product_id = '" . (int) $productId . "',             store_id = '0'");            foreach ($data['images'] as $key => $product_image) {                $database->query("INSERT INTO " . DB_PREFIX . "product_image SET                 product_id = '" . (int) $productId . "',                 image = '',                image_link = '" . (html_entity_decode($product_image, ENT_QUOTES, 'UTF-8')) . "',                 sort_order = '" . (int) $key . "'");            }            $database->query("INSERT INTO " . DB_PREFIX . "product_to_category SET                     product_id = '" . (int) $productId . "',                     category_id = '" . (int) $this->categoyId . "'");            $database->query("INSERT INTO " . DB_PREFIX . "product_to_category_supplier SET             product_id = '" . (int) $productId . "',             category_id = '" . (int) $data['category_supplier_id'] . "'");            return $productId;        } else {            return $product->product_id;        }    }    public function addCategory($data) {        $database = new dataBase();        $database->connect();        $category = $database->fetchRow("select * from " . DB_PREFIX . "supplier_category sc inner join " . DB_PREFIX . "supplier_category_description scd                                        on sc.category_id = scd.category_id                                        where sc.supplier_id = '" . (int) $data['supplier_id'] . "' and scd.language_id = 2 and scd.name= '" . $data['category_name'] . "'");        if (!$category) {            $database->query("INSERT INTO " . DB_PREFIX . "supplier_category SET                         parent_id = '" . 0 . "',                        `column` = '" . (int) 1 . "',                        `supplier_id` = '" . (int) $data['supplier_id'] . "',                         sort_order = '" . 1 . "', status = '" . 1 . "',                        main_category_id = '" . $data['main_category'] . "', date_modified = NOW(), date_added = NOW()");            $category_id = $database->lastInsertId();            $data['keyword'] = 's' . $category_id . '-' . convertTitle($data['category_name']);            if ($data['keyword']) {                $database->query("INSERT INTO " . DB_PREFIX . "url_alias SET query = 'sub_category_id=" . (int) $category_id . "', keyword = '" . ($data['keyword']) . "'");            }            foreach ($this->language as $language_id) {                $database->query("INSERT INTO " . DB_PREFIX . "supplier_category_description SET                 category_id = '" . (int) $category_id . "',                 language_id = '" . (int) $language_id . "',                 name = '" . ($data['category_name']) . "',                 meta_keyword = '',                 meta_description = '',                 description = ''");            }            return $category_id;        } else {            return $category->category_id;        }    }    public function getSupplier() {        $dom = new DOMDocument('1.0', 'utf-8');        $dom->load('supplier.xml');        $dom->formatOutput = true;        $xmlXpath = new DOMXPath($dom);        $suppliers = $xmlXpath->query('.//supplier');        foreach ($suppliers as $supplier) {            $data['name'] = $xmlXpath->query('.//supplier_name', $supplier)->item(0)->nodeValue;            $data['url'] = $xmlXpath->query('.//supplier_link', $supplier)->item(0)->nodeValue;            $data['logo'] = $xmlXpath->query('.//supplier_logo', $supplier)->item(0)->nodeValue;            $supplierStatus = $xmlXpath->query('.//supplier_status', $supplier)->item(0);            $data['status'] = $supplierStatus->nodeValue;            $data['company'] = $xmlXpath->query('.//supplier_company', $supplier)->item(0)->nodeValue;            $data['address'] = $xmlXpath->query('.//supplier_address', $supplier)->item(0)->nodeValue;            $data['mobile'] = $xmlXpath->query('.//supplier_mobile', $supplier)->item(0)->nodeValue;            $data['fax'] = $xmlXpath->query('.//supplier_fax', $supplier)->item(0)->nodeValue;            $data['email'] = $xmlXpath->query('.//supplier_email', $supplier)->item(0)->nodeValue;            $data['phone'] = $xmlXpath->query('.//supplier_phone', $supplier)->item(0)->nodeValue;            $data['main_category'] = $xmlXpath->query('.//main_category', $supplier)->item(0)->nodeValue;            $supplierFunction = $xmlXpath->query('.//supplier_function', $supplier)->item(0)->nodeValue;            $data['function'] = $supplierFunction;            if ($supplierStatus->nodeValue == 0) {                $product = $this->$supplierFunction($data);                $supplierStatus->nodeValue = 1;                $dom->save('supplier.xml');            }        }    }    public function getCategoryLink($url) {        $xpath = $this->loadXpath($url);        $categoies = $xpath->query('.//div[@class="module_small module_small_menu_product"]/div/ul/li[@class="level_0 normal"]/a/@href');//        $categoies = $xpath->query('.//div[@class="module_small module_small_menu_product"]/div/ul/li[@class="level_1"]/a/@href');        $categoiesName = $xpath->query('.//div[@class="module_small module_small_menu_product"]/div/ul/li[@class="level_1"]/a');        foreach ($categoies as $key => $categoryLink) {            $link[$key]['name'] = $categoiesName->item($key)->nodeValue;            $link[$key]['url'][] = 'http://vatgia.com/' . $categoryLink->nodeValue;        }        return $link;    }    public function getpageLink($url) {        $linkCategories = $this->getCategoryLink($url);        foreach ($linkCategories as $key => $value) {            $catLink = $value['url'][0];            $xpath = $this->loadXpath($catLink);            $pageLink = $xpath->query('.//a[@class="page"]');            $countPage = $pageLink->length;            $linkCategories[$key]['product_url'] = $this->getProductLink($catLink);            if ($countPage > 0) {                for ($i = 2; $i <= $countPage; $i++) {                    $linkCategories[$key]['url'][] = $catLink . '&page=' . $i;                    $linkCategories[$key]['product_url'] = array_merge($linkCategories[$key]['product_url'], $this->getProductLink($catLink . '&page=' . $i));                }            }            sleep(1);        }        return $linkCategories;    }    public function getProductLink($url) {//        $linkCategories = $this->getpageLink($url);//        foreach ($linkCategories as $key => $value) {//            foreach ($value['url'] as $catLink) {        $xpath = $this->loadXpath($url);        $productLink = $xpath->query('.//div[@class="product_name"]/a/@href');        $product_link = array();        foreach ($productLink as $link) {            $product_link[] = 'http://vatgia.com/' . $link->nodeValue;        }//            }//        }//        var_dump($linkCategories);die;        return $product_link;    }    public function getInfoSupplier($supplier) {//        $xpath = $this->loadXpath($link);        $database = new dataBase();        $database->connect();        //check username exists        $supplier_data = $database->fetchRow('select * from ' . DB_PREFIX . 'supplier where username = "' . $supplier['name'] . '"');        $logo = '';        if (!$supplier_data) {            $dirPath = SUPPLIER_PATH . '/' . $supplier['name'];            if (!is_dir($dirPath)) {                mkdir($dirPath, 0777, true);            }            $imgName = '';            if (!empty($supplier['logo'])) {                $server_info = getServerActive();                $data_image['filename'] = end(explode('/', $supplier['logo']));                $data_image['password'] = $server_info['server_password'];                $data_image['name'] = $supplier['name'];                $data_image['source'] = $supplier['logo'];                $curl = new Curl();                $result = $curl->curlPost($server_info['server_script'], $data_image);                $result = json_decode($result);                $logo = '';                if ($result->success == 1) {                    $logo = $result->image;                }            }            $sql = "INSERT INTO " . DB_PREFIX . "supplier SET name = '" . ($supplier['company']) . "',            username = '" . $supplier['name'] . "',            email = '" . ($supplier['email']) . "',            password = '" . (md5('123456')) . "',            supplier_group_id = '1',            url = '',            address = '" . ($supplier['address']) . "',            phone = '" . ($supplier['mobile']) . "',            publish_phone = '" . ($supplier['phone']) . "',            fax = '" . ($supplier['fax']) . "',            image_link = '" . $logo . "',            status = '1',date_added = NOW()";            $database->query($sql);            $supplier_id = $database->lastInsertId();            if ($supplier['name']) {                $database->query("INSERT INTO " . DB_PREFIX . "url_alias SET query = 'supplier_id=" . (int) $supplier_id . "', keyword = '" . ($supplier['name']) . "'");            }            return $supplier_id;        } else {            return $supplier_data->supplier_id;        }    }    public function getG9mart($supplier_config) {        $dom = new DOMDocument('1.0', 'utf-8');        $dom->load('product.xml');        $dom->formatOutput = true;//        $linkProducts = $this->getpageLink($supplier_config['url']);        $supplierId = $this->getInfoSupplier($supplier_config);        $foo = $dom->getElementsByTagName("root");        $root = $foo->item(0);        $supplier = $dom->createElement("supplier");        $root->appendChild($supplier);        $supplier_id = $dom->createElement("supplier_id", $supplierId);        $supplier->appendChild($supplier_id);        $data['main_category'] = $supplier_config['main_category'];        $mainCategory = $dom->createElement("main_category", $supplier_config['main_category']);        $supplier->appendChild($mainCategory);        $function = $dom->createElement("function", $supplier_config['function']);        $supplier->appendChild($function);        $linkProducts = $this->getpageLink($supplier_config['url']);        foreach ($linkProducts as $key => $linkProduct) {            $data = array();            $data['supplier_id'] = $supplierId;            $data['category_name'] = $linkProduct['name'];            $data['category_supplier_id'] = $this->addCategory($data);            $category = $dom->createElement("category");            $supplier->appendChild($category);            $category_id = $dom->createElement("category_id", $data['category_supplier_id']);            $category->appendChild($category_id);            foreach ($linkProduct['product_url'] as $link) {                $link = str_replace('&', '{and}', $link);                $product_link = $dom->createElement("product", $link);                $category->appendChild($product_link);                $domAttribute = $dom->createAttribute('status');                $domAttribute->value = '0';                $product_link->appendChild($domAttribute);            }        }        $dom->save('product.xml');    }}?>